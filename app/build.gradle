plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId 'com.marvelsample.mobile'
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "MARVEL_API_KEY", getApiKey())
            buildConfigField("String", "MARVEL_PRIVATE_KEY", getPrivateApiKey())
        }

        debug {
            buildConfigField("String", "MARVEL_API_KEY", getApiKey())
            buildConfigField("String", "MARVEL_PRIVATE_KEY", getPrivateApiKey())

            applicationIdSuffix ".debug"
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // AndroidX
    def androidXVersion = '2.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:' + androidXVersion
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:' + androidXVersion
    implementation 'androidx.lifecycle:lifecycle-viewmodel-savedstate:' + androidXVersion
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:' + androidXVersion
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.paging:paging-runtime-ktx:3.0.0-alpha12'
    implementation 'androidx.activity:activity-ktx:1.2.0-rc01'
    implementation 'androidx.palette:palette-ktx:1.0.0'

    // Navigation
    def androidXNavigationVersion = '2.3.2'
    implementation 'androidx.navigation:navigation-fragment-ktx:' + androidXNavigationVersion
    implementation 'androidx.navigation:navigation-ui-ktx:' + androidXNavigationVersion

    // Networking (retrofit + okhttp)
    def retrofitVersion = '2.9.0'
    def okhttpVersion = '4.9.0'
    implementation 'com.squareup.retrofit2:retrofit:' + retrofitVersion
    implementation 'com.squareup.retrofit2:converter-gson:' + retrofitVersion
    implementation 'com.squareup.okhttp3:okhttp:' + okhttpVersion
    implementation 'com.squareup.okhttp3:logging-interceptor:' + okhttpVersion

    // Image render library (Coil)
    implementation 'io.coil-kt:coil:1.1.0'

    // Koin (DI library)
    def koinVersion = "2.2.0"
    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-androidx-viewmodel:$koinVersion"

    // Testing
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'org.mockito:mockito-inline:2.8.47'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
}

def getApiKey() {
    def keysFile = file("keys.properties")
    def keysProperties = new Properties()
    keysProperties.load(new FileInputStream(keysFile))
    def tmdbApiKey = keysProperties['MARVEL_PUBLIC_KEY']
    return tmdbApiKey
}

def getPrivateApiKey() {
    def keysFile = file("keys.properties")
    def keysProperties = new Properties()
    keysProperties.load(new FileInputStream(keysFile))
    def tmdbApiKey = keysProperties['MARVEL_PRIVATE_KEY']
    return tmdbApiKey
}